{"version":3,"file":"main.js","sourceRoot":"/","sources":["main.ts"],"names":[],"mappings":";;;AACA,6CAAoC;AACpC,kFAAiF;AACjF,sFAA0G;AAI1G,MAAa,eAAgB,SAAQ,2BAAS;IAG5C,YAAY,MAAwC;QAClD,KAAK,CAAC,MAAM,CAAC,CAAC;QACd,IAAI,MAAM,CAAC,QAAQ,EAAE;YACnB,IAAI,CAAC,OAAO,GAAG,6BAAE,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,QAAQ,EAAE,EAAE,eAAe,EAAE,KAAK,EAAE,CAAC,CAAC;SAClF;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,6BAAE,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SACrC;IACH,CAAC;IAEK,GAAG,CAAC,IAAS,EAAE,QAAuC;;YAE1D,MAAM,EAAE,KAAK,EAAE,OAAO,KAAc,IAAI,EAAhB,iDAAgB,CAAC;YAEzC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,GAAG,IAAI,CAAC,mBAAK,CAAC,CAAC;YAEhC,IAAI,CAAC,MAAM,EAAE;gBACX,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;gBAC/B,OAAO;aACR;YAED,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,EAAE;gBAC9B,MAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;gBAC7B,OAAO,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aAC7B;YAED,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE;gBACjC,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;gBAChC,OAAO,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;aAC7B;YAED,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC;YACpC,OAAO,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAC/B,CAAC;KAAA;IAEa,YAAY,CAAC,MAAsB;;YAC/C,MAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC;YAC3C,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAC9B,CAAC;KAAA;IAEa,SAAS,CAAC,MAAmB;;YACzC,MAAM,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC;YACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAC9B,CAAC;KAAA;IAEO,aAAa,CAAC,MAAW;QAC/B,OAAO,MAAM,CAAC,EAAE,IAAI,MAAM,CAAC,EAAE,CAAC;IAChC,CAAC;IAEO,gBAAgB,CAAC,MAAW;QAClC,OAAO,MAAM,CAAC,EAAE,IAAI,MAAM,CAAC,EAAE,CAAC;IAChC,CAAC;CACF;AAtDD,0CAsDC","sourcesContent":["import * as path from 'path';\nimport { SPLAT } from 'triple-beam';\nimport { default as Transport, TransportStreamOptions } from 'winston-transport';\nimport { default as ua, EventParams, PageviewParams, Visitor, VisitorOptions } from 'universal-analytics';\nexport type GoogleAnalyticsConstructorParams = TransportStreamOptions & { accountID: string; clientID?: string };\nexport type GoogleAnalyticsLogParams = EventParams | PageviewParams;\n\nexport class GoogleAnalytics extends Transport {\n  private visitor: Visitor;\n\n  constructor(params: GoogleAnalyticsConstructorParams) {\n    super(params);\n    if (params.clientID) {\n      this.visitor = ua(params.accountID, params.clientID, { strictCidFormat: false });\n    } else {\n      this.visitor = ua(params.accountID);\n    }\n  }\n\n  async log(info: any, callback: (_: any, __: boolean) => void) {\n    // we only care if an object with the shape { analytics: GoogleAnalyticsLogParams } is passed in\n    const { label, message, ...meta } = info;\n\n    const [_, params] = meta[SPLAT];\n\n    if (!params) {\n      this.emit('warn', 'no params');\n      return;\n    }\n\n    if (this.isEventParams(params)) {\n      await this.sendEvent(params);\n      return callback(null, true);\n    }\n\n    if (this.isPageviewParams(params)) {\n      await this.sendPageview(params);\n      return callback(null, true);\n    }\n\n    this.emit('warn', 'nothing passed');\n    return callback(null, false);\n  }\n\n  private async sendPageview(params: PageviewParams) {\n    await this.visitor.pageview(params).send();\n    this.emit('logged', params);\n  }\n\n  private async sendEvent(params: EventParams) {\n    await this.visitor.event(params).send();\n    this.emit('logged', params);\n  }\n\n  private isEventParams(params: any): params is EventParams {\n    return params.ec && params.ea;\n  }\n\n  private isPageviewParams(params: any): params is PageviewParams {\n    return params.dp && params.dh;\n  }\n}\n"]}